/**
 *  @fileOverview Grace
 */

/* need to use the CSL module to generate the CSL code */
var CSL = xdc.useModule('ti.mcu.msp430.csl.CSL');
var Timer1_A3 = xdc.useModule('ti.mcu.msp430.csl.timer.Timer1_A3');
CSL.configApiVersion = "1.20.00";

/* these modules should be part of every project */
var BCSplus = xdc.useModule('ti.mcu.msp430.csl.clock.BCSplus');
var WDTplus = xdc.useModule('ti.mcu.msp430.csl.watchdog.WDTplus');
var System = xdc.useModule('ti.mcu.msp430.csl.system.System');
var GPIO = xdc.useModule('ti.mcu.msp430.csl.gpio.GPIO');
var InterruptVectors = xdc.useModule('ti.mcu.msp430.csl.interrupt_vectors.InterruptVectors');

Program.sysStack = 0;
Program.heap = 0;
Program.argSize = 0;
Program.stack = 32;

/* enable interrupts at the end of Grace_init */
System.srRegs.SR.GIE = System.srDefs.GIE;

/* set P1.0 as output so we can drive the launchpad's attached LED */
GPIO.regs.P1DIR.Bit0 = GPIO.defs.BIT0;

/* disable watchdog timer */
WDTplus.regs.WDTCTL.WDTHOLD = WDTplus.defs.WDTHOLD;

CSL.device.vcc = 3.6;
BCSplus.userInputDCO = 16000.0;
GPIO.regs.P1DIR.Bit6 = GPIO.defs.BIT6_OFF;
GPIO.regs.P1SEL.Bit6 = GPIO.defs.BIT6_OFF;
GPIO.regs.P1DIR.Bit1 = GPIO.defs.BIT1;
GPIO.regs.P1SEL.Bit1 = GPIO.defs.BIT1_OFF;
GPIO.regs.P3DIR.Bit0 = GPIO.defs.BIT0_OFF;
GPIO.regs.P3SEL.Bit0 = GPIO.defs.BIT0_OFF;
Timer1_A3.regs.TA1CTL.TASSEL = Timer1_A3.defs.TASSEL_2;
Timer1_A3.inputClockToTimer = 16000.0;
Timer1_A3.regs.TA1CTL.MC = Timer1_A3.defs.MC_1;
Timer1_A3.regs.TA1CCR0 = 319;
Timer1_A3.regs.TA1CCTL0.OUTMOD = Timer1_A3.defs.OUTMOD_4;
Timer1_A3.ccr0TimerSelection_PowerUser = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_PowerUser_Selection_1;
Timer1_A3.ccInputPin[0] = 0;
Timer1_A3.ccr0TimerSelection_BasicView = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_BasicView_Selection_3;
Timer1_A3.ccrOutputPin[0] = 1;
GPIO.regs.P2DIR.Bit0 = GPIO.defs.BIT0;
GPIO.regs.P2SEL.Bit0 = GPIO.defs.BIT0;
BCSplus.regs.LFXT1CLKHz = 12000.0;
BCSplus.regs.BCSCTL3.LFXT1S = BCSplus.defs.LFXT1S_2;
GPIO.regs.P2SEL.Bit6 = GPIO.defs.BIT6_OFF;
GPIO.regs.P2SEL.Bit7 = GPIO.defs.BIT7_OFF;
Timer1_A3.ccrXTimerSelection_BasicView[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_BasicView_Selection_1;
Timer1_A3.ccrXTimerSelection_PowerUser[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_PowerUser_Selection_1;
Timer1_A3.ccInputPin[2] = 0;
Timer1_A3.regs.TA1CCR1 = 153;
Timer1_A3.regs.TA1CCTL1.OUTMOD = Timer1_A3.defs.OUTMOD_7;
Timer1_A3.ccrOutputPin[1] = 1;
GPIO.regs.P2DIR.Bit1 = GPIO.defs.BIT1;
GPIO.regs.P2SEL.Bit1 = GPIO.defs.BIT1;
Timer1_A3.ccrXTimerSelection_BasicView[2] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_BasicView_Selection_0;
Timer1_A3.ccrXTimerSelection_PowerUser[2] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_PowerUser_Selection_0;
Timer1_A3.regs.TA1CCR2 = 0;
Timer1_A3.regs.TA1CCTL2.OUTMOD = Timer1_A3.defs.OUTMOD_0;
Timer1_A3.ccrOutputPin[2] = 0;
GPIO.regs.P2DIR.Bit4 = GPIO.defs.BIT4_OFF;
GPIO.regs.P2SEL.Bit4 = GPIO.defs.BIT4_OFF;
Timer1_A3.regs.interruptSource[3].interruptEnable = false;
Timer1_A3.regs.interruptSource[3].interruptHandler = false;
Timer1_A3.regs.interruptSource[0].interruptHandler = false;
Timer1_A3.regs.interruptSource[2].interruptHandler = false;
Timer1_A3.regs.TA1CCTL2.CCIE = Timer1_A3.defs.CCIE_OFF;
Timer1_A3.regs.TA1CTL.ID = Timer1_A3.defs.ID_0;
Timer1_A3.regs.interruptSource[0].interruptEnable = false;
Timer1_A3.regs.TA1CTL.TAIE = Timer1_A3.defs.TAIE_OFF;
Timer1_A3.regs.interruptSource[1].interruptHandler = true;
Timer1_A3.regs.interruptSource[1].interruptEnable = true;
Timer1_A3.regs.TA1CCTL0.CCIE = Timer1_A3.defs.CCIE;
